package io.cequence.openaiscala.domain.responsesapi.tools

import io.cequence.openaiscala.domain.responsesapi.Input

/**
 * A tool call to run a command on the local shell.
 *
 * @param action
 *   The action to execute a shell command on the server.
 * @param callId
 *   The unique ID of the local shell tool call generated by the model.
 * @param id
 *   The unique ID of the local shell call.
 * @param status
 *   The status of the local shell call.
 */
final case class LocalShellToolCall(
  action: LocalShellAction,
  callId: String,
  id: String,
  status: String
) extends Input {
  val `type`: String = "local_shell_call"
}

/**
 * The action to execute a shell command on the server.
 *
 * @param command
 *   The command to run, as a sequence of strings (the command and its arguments).
 * @param env
 *   Environment variables to set for the command.
 * @param timeoutMs
 *   Optional timeout in milliseconds for the command.
 * @param user
 *   Optional user to run the command as.
 * @param workingDirectory
 *   Optional working directory to run the command in.
 */
final case class LocalShellAction(
  command: Seq[String],
  env: Map[String, String],
  timeoutMs: Option[Int] = None,
  user: Option[String] = None,
  workingDirectory: Option[String] = None
) {
  val `type`: String = "exec"
}
