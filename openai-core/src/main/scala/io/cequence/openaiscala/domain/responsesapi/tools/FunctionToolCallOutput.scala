package io.cequence.openaiscala.domain.responsesapi.tools

import io.cequence.openaiscala.domain.responsesapi.{Input, InputMessageContent, ModelStatus}

/**
 * The output of a function tool call.
 *
 * @param callId
 *   The unique ID of the function tool call generated by the model
 * @param output
 *   The output of the function tool call - either a JSON string or an array of input message
 *   content
 * @param id
 *   The unique ID of the function tool call output
 * @param status
 *   The status of the item
 */
final case class FunctionToolCallOutput(
  callId: String,
  output: FunctionToolOutput,
  id: Option[String] = None,
  status: Option[ModelStatus] = None // in_progress, completed, or incomplete
) extends Input {
  val `type`: String = "function_call_output"
}

/**
 * Represents the output of a function tool call, which can be either a string or an array of
 * input message content.
 */
sealed trait FunctionToolOutput

object FunctionToolOutput {

  /**
   * A string output from a function tool call.
   *
   * @param value
   *   The JSON string output
   */
  final case class StringOutput(value: String) extends FunctionToolOutput

  /**
   * An array of input message content from a function tool call.
   *
   * @param content
   *   The array of input message content
   */
  final case class ContentOutput(content: Seq[InputMessageContent]) extends FunctionToolOutput
}
