package io.cequence.openaiscala.domain.responsesapi.tools

import io.cequence.openaiscala.domain.responsesapi.{Input, ModelStatus, Output}

/**
 * A tool call to run a function.
 *
 * @param arguments
 *   A JSON string of the arguments to pass to the function
 * @param callId
 *   The unique ID of the function tool call generated by the model
 * @param name
 *   The name of the function to run
 * @param `type`
 *   The type of the function tool call. Always function_call
 * @param id
 *   The unique ID of the function tool call
 * @param status
 *   The status of the item
 */
final case class FunctionToolCall(
  arguments: String,
  callId: String,
  name: String,
  id: Option[String] = None,
  status: Option[ModelStatus] = None // in_progress, completed, or incomplete
) extends ToolCall
    with Input
    with Output {
  override val `type`: String = "function_call"
}
